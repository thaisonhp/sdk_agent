import mysql.connector
from mysql.connector import Error
from typing import Optional
class MySQLDatabase:
    def __init__(self, host: Optional[str] = "localhost",
                 user: Optional[str] = "root",
                 password: Optional[str] = "luongthaison",
                 database: Optional[str] = "estatebasic"):
        self.host = host
        self.user = user
        self.password = password
        self.database = database
        self.connect()

    def connect(self):
        """T·∫°o k·∫øt n·ªëi ƒë·∫øn MySQL"""
        try:
            self.connection = mysql.connector.connect(
                host=self.host,
                user=self.user,
                password=self.password,
                database=self.database
            )
            if self.connection.is_connected():
                print("üîó K·∫øt n·ªëi MySQL th√†nh c√¥ng!")
        except Error as e:
            print(f"‚ùå L·ªói k·∫øt n·ªëi MySQL: {e}")

    def execute_query(self, query, params=None):
        """Th·ª±c thi c√¢u l·ªánh INSERT, UPDATE, DELETE"""
        try:
            cursor = self.connection.cursor()
            cursor.execute(query, params)
            self.connection.commit()
            print("‚úÖ Truy v·∫•n th·ª±c thi th√†nh c√¥ng!")
        except Error as e:
            print(f"‚ùå L·ªói th·ª±c thi truy v·∫•n: {e}")

    def fetch_all(self, query, params=None):
        """Truy v·∫•n d·ªØ li·ªáu v√† tr·∫£ v·ªÅ t·∫•t c·∫£ k·∫øt qu·∫£"""
        try:
            cursor = self.connection.cursor(dictionary=True)
            cursor.execute(query, params)
            return cursor.fetchall()
        except Error as e:
            print(f"‚ùå L·ªói truy v·∫•n: {e}")
            return None

    def fetch_one(self, query, params=None):
        """Truy v·∫•n d·ªØ li·ªáu v√† tr·∫£ v·ªÅ m·ªôt d√≤ng"""
        try:
            cursor = self.connection.cursor(dictionary=True)
            cursor.execute(query, params)
            return cursor.fetchone()
        except Error as e:
            print(f"‚ùå L·ªói truy v·∫•n: {e}")
            return None

    def close(self):
        """ƒê√≥ng k·∫øt n·ªëi MySQL"""
        if self.connection and self.connection.is_connected():
            self.connection.close()
            print("üîå K·∫øt n·ªëi MySQL ƒë√£ ƒë√≥ng.")

# -------------------------
# üí° V√≠ d·ª• s·ª≠ d·ª•ng class
# -------------------------

if __name__ == "__main__":
    db = MySQLDatabase()

    # Truy v·∫•n t·∫•t c·∫£ d·ªØ li·ªáu t·ª´ b·∫£ng users
    buinlding  = db.fetch_all("SELECT * FROM building")
    print(buinlding)
    # ƒê√≥ng k·∫øt n·ªëi
    db.close()
